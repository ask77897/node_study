<style>
    .page-link{
        color: #6f42c1;
    }
    .page-link:hover{
        color: #6e42c1b8;
    }
    .page-item.active .page-link{
        color:#fff;
        background-color: #6f42c1;
        border-color: #6e42c1b8;
    }
</style>
<div class="my-5">
    <h1 class="text-center mb-5">주문관리</h1>
    <div>
        <select class="py-1" id="status">
            <option value="100">모든구매</option>
            <option value="0">결제대기중</option>
            <option value="1">결제확인</option>
            <option value="2">배송준비중</option>
            <option value="3">배송완료</option>
            <option value="4">주문완료</option>
        </select>
        <button id="btn_search" class="btn btn-sm" style="background-color:#6f42c1; color:#fff;"><i class="bi bi-search"></i></button>
        <span class="ms-3">검색 수 : <span id="count">0건</span></span>
    </div>
    <div id="div_purchase"></div>
    <div id="pagination" class="pagination justify-content-center mt-5"></div>
    <%-include("modal.ejs")%>
</div>
<script type="x-handlebars-template" id="temp_purchase">
    <table class="table">
        {{#each .}}
            <tr>
                <td>{{pid}}</td>
                <td>{{rname}}</td>
                <td>{{raddress1}}</td>
                <td>{{raddress2}}</td>
                <td>{{phone}}</td>
                <td>{{fmtsum}}</td>
                <td>{{fmtdate}}</td>
                <td pid={{pid}}>
                    <select class="py-1 status">
                        <option value="0" {{status status 0}}>결제대기중</option>
                        <option value="1" {{status status 1}}>결제확인</option>
                        <option value="2" {{status status 2}}>배송준비중</option>
                        <option value="3" {{status status 3}}>배송완료</option>
                        <option value="4" {{status status 4}}>주문완료</option>
                    </select>
                    <button class="btn btn-sm btn_up" style="background-color:#6f42c1; color:#fff;">수정</button>
                </td>
                <td><button class="btn btn-sm btn_modal" style="background-color:#6f42c1; color:#fff;" pid="{{pid}}">주문상품</button></td>
            </tr>
        {{/each}}
    </table>
</script>
<script>
    Handlebars.registerHelper("status", function(status, value){
        if(status==value) return "selected";
    })
</script>
<script>
    let page=1;
    getTotal();
    function getPurchase(){
        $.ajax({
            type:'get',
            url:'/order/admin.json',
            data:{page, status:$("#status").val()},
            success:function(data){
                const temp=Handlebars.compile($("#temp_purchase").html());
                $("#div_purchase").html(temp(data));
            }
        });
    }
    function getTotal(){
        $.ajax({
            type:"get",
            url:"/order/count",
            data:{status:$("#status").val()},
            success:function(data){
                if(data==0){
                    alert("검색된 구매 내역이 없습니다.");
                    $("#status").val("100");
                    getTotal();
                    //$("#status").val("100").attr("selected", true);
                    //$("#btn_search").click();
                }
                else {
                    $("#count").html(data);
                    const totalPages = Math.ceil(data/3);
                    $("#pagination").twbsPagination("changeTotalPages", totalPages, page)
                }
            }
        });
    }
    $("#div_purchase").on("click", ".btn_up", function(){
        //alert("..");
        const pid=$(this).parent().attr("pid");
        const status=$(this).parent().find(".status").val();
        //alert(pid + '/' + status);
        $.ajax({
            type:'post',
            url:'/order/status/update',
            data:{pid, status},
            success:function(){
                page=1;
                getTotal();
                alert("상태가 변경되었습니다.");
            }
        });
    });
    //검색버튼을 눌렀을 때
    $("#btn_search").on("click", function(){
        page=1;
        getTotal();
    });
    //주문상품버튼을 눌렀을 때
    $("#div_purchase").on("click", ".btn_modal", function(){
        const pid=$(this).attr("pid");
        $.ajax({
            type:'get',
            url:'/order/book.json',
            data:{pid},
            success:function(data){
                //console.log(data);
                const temp=Handlebars.compile($("#temp_orders").html());
                $("#div_orders").html(temp(data));
                $("#modal").modal("show");
            }
        });
    })
    $('#pagination').twbsPagination({
        totalPages: 10, //총 페이지 번호 수
        visiblePages: 5, // 하단에서 한 번에 보여 지는 페이지 번호 수
        startPage : 1, // 시작 시 표시되는 현재 페이지
        initiateStartPageClick: false, // 플러그인이 시작 시 페이지 버튼 클릭 여부 (default : true)
        first : '<i class="bi bi-chevron-double-left"></i>', // 페이지네이션 버튼 중 처음으로 돌아가는 버튼에 쓰여 있는 텍스트
        prev : '<i class="bi bi-chevron-left"></i>', // 이전 페이지 버튼에 쓰여 있는 텍스트
        next : '<i class="bi bi-chevron-right"></i>', // 다음 페이지 버튼에 쓰여 있는 텍스트
        last : '<i class="bi bi-chevron-double-right"></i>', // 페이지네이션 버튼 중 마지막으로 가는 버튼에 쓰여 있는 텍스트
        pageClass : "page-item",	// 페이지 버튼의 CSS class
        activeClass : "active",	// 클릭된 페이지 버튼의 CSS class
        disabledClass : "disabled",	// 클릭 안된 페이지 버튼의 CSS class
        anchorClass : "page-link",	//버튼 안의 앵커에 대한 CSS class
        onPageClick: function (event, clickPage) {
            page=clickPage;
            getPurchase(); 
        }
    });
</script>